/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scientific.claculator;

import com.sun.glass.events.KeyEvent;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;



/**
 *
 * @author Dexter Sam
 */
public class Calc extends javax.swing.JFrame {
    
    String value;
    double fnum;
    double snum;
    int fnums;
    int snums;
    String operator;
    double ans;
    int ans2;
    String stored;
    int reseter=0 ;
    boolean degreemode =false;
    boolean radianmode=true;
    boolean multiop=false;
    boolean incomplete=false;
    boolean negative =false;
    boolean special=false;
    boolean containdot=false;
    boolean decmode=true;
    boolean binmode=false;
    boolean hexmode=false;
    boolean octmode=false;
     
 
  

    /**
     * Creates new form Calc
     */
    public Calc() {
        
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("calcicon.png")));
        Dimension dim=Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jTextField1 = new javax.swing.JTextField();
        frame = new javax.swing.JDesktopPane();
        display = new javax.swing.JTextField();
        radian = new javax.swing.JRadioButton();
        degree = new javax.swing.JRadioButton();
        sin = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        one = new javax.swing.JButton();
        hex = new javax.swing.JButton();
        four = new javax.swing.JButton();
        oct = new javax.swing.JButton();
        six = new javax.swing.JButton();
        five = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        resultss = new javax.swing.JButton();
        dot = new javax.swing.JButton();
        percent = new javax.swing.JButton();
        cos = new javax.swing.JButton();
        root = new javax.swing.JButton();
        tan = new javax.swing.JButton();
        two = new javax.swing.JButton();
        bin = new javax.swing.JButton();
        three = new javax.swing.JButton();
        tanh = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        devide = new javax.swing.JButton();
        squares = new javax.swing.JButton();
        square = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        plus = new javax.swing.JButton();
        multiply = new javax.swing.JButton();
        pie = new javax.swing.JButton();
        sinh = new javax.swing.JButton();
        cosh = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        equal = new javax.swing.JButton();
        dec = new javax.swing.JButton();
        binary = new javax.swing.JRadioButton();
        octal = new javax.swing.JRadioButton();
        decimal = new javax.swing.JRadioButton();
        hexadicamal = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        factorial = new javax.swing.JButton();
        plusminus = new javax.swing.JButton();
        ncr = new javax.swing.JButton();
        inverse = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Calculator");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(12, 29, 75));
        setType(java.awt.Window.Type.POPUP);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        display.setEditable(false);
        display.setBackground(new java.awt.Color(34, 39, 46));
        display.setFont(new java.awt.Font("Berlin Sans FB", 3, 18)); // NOI18N
        display.setForeground(new java.awt.Color(255, 255, 255));
        display.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        display.setDoubleBuffered(true);
        display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayActionPerformed(evt);
            }
        });
        display.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                displayKeyTyped(evt);
            }
        });
        frame.add(display);
        display.setBounds(10, 10, 330, 80);

        buttonGroup1.add(radian);
        radian.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        radian.setSelected(true);
        radian.setText("Rad");
        radian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radianActionPerformed(evt);
            }
        });
        frame.add(radian);
        radian.setBounds(10, 100, 50, 23);

        buttonGroup1.add(degree);
        degree.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        degree.setText("Deg");
        degree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                degreeActionPerformed(evt);
            }
        });
        frame.add(degree);
        degree.setBounds(10, 140, 50, 23);

        sin.setBackground(new java.awt.Color(51, 204, 255));
        sin.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        sin.setForeground(new java.awt.Color(255, 255, 255));
        sin.setText("sin");
        sin.setToolTipText("Enter a number first");
        sin.setBorder(null);
        sin.setFocusable(false);
        sin.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sin.setMargin(new java.awt.Insets(2, 5, 2, 5));
        sin.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sinFocusGained(evt);
            }
        });
        sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinActionPerformed(evt);
            }
        });
        frame.add(sin);
        sin.setBounds(10, 280, 57, 26);

        seven.setFont(new java.awt.Font("Algerian", 1, 20)); // NOI18N
        seven.setText("7");
        seven.setFocusable(false);
        seven.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        seven.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });
        frame.add(seven);
        seven.setBounds(10, 320, 57, 26);

        one.setFont(new java.awt.Font("Algerian", 1, 20)); // NOI18N
        one.setText("1");
        one.setFocusable(false);
        one.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        one.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });
        frame.add(one);
        one.setBounds(10, 380, 57, 26);

        hex.setBackground(new java.awt.Color(0, 204, 255));
        hex.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        hex.setForeground(new java.awt.Color(255, 255, 255));
        hex.setText("hex");
        hex.setToolTipText("Enter a number first");
        hex.setBorder(null);
        hex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexActionPerformed(evt);
            }
        });
        frame.add(hex);
        hex.setBounds(130, 220, 57, 26);

        four.setFont(new java.awt.Font("Algerian", 1, 20)); // NOI18N
        four.setText("4");
        four.setFocusable(false);
        four.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        four.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });
        frame.add(four);
        four.setBounds(10, 350, 57, 26);

        oct.setBackground(new java.awt.Color(0, 204, 255));
        oct.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        oct.setForeground(new java.awt.Color(255, 255, 255));
        oct.setText("oct");
        oct.setToolTipText("Enter a number first");
        oct.setBorder(null);
        oct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                octActionPerformed(evt);
            }
        });
        frame.add(oct);
        oct.setBounds(70, 220, 57, 26);

        six.setFont(new java.awt.Font("Algerian", 1, 20)); // NOI18N
        six.setText("6");
        six.setFocusable(false);
        six.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        six.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });
        frame.add(six);
        six.setBounds(130, 350, 57, 26);

        five.setFont(new java.awt.Font("Algerian", 1, 20)); // NOI18N
        five.setText("5");
        five.setFocusable(false);
        five.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        five.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });
        frame.add(five);
        five.setBounds(70, 350, 57, 26);

        nine.setFont(new java.awt.Font("Algerian", 1, 20)); // NOI18N
        nine.setText("9");
        nine.setBorder(null);
        nine.setFocusable(false);
        nine.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nine.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });
        frame.add(nine);
        nine.setBounds(130, 320, 57, 26);

        eight.setFont(new java.awt.Font("Algerian", 1, 20)); // NOI18N
        eight.setText("8");
        eight.setFocusable(false);
        eight.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eight.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });
        frame.add(eight);
        eight.setBounds(70, 320, 57, 26);

        zero.setFont(new java.awt.Font("Algerian", 1, 20)); // NOI18N
        zero.setText("0");
        zero.setFocusable(false);
        zero.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        zero.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });
        frame.add(zero);
        zero.setBounds(10, 410, 57, 26);

        resultss.setBackground(new java.awt.Color(28, 77, 125));
        resultss.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        resultss.setForeground(new java.awt.Color(255, 255, 255));
        resultss.setText("Ans");
        resultss.setBorder(null);
        resultss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultssActionPerformed(evt);
            }
        });
        frame.add(resultss);
        resultss.setBounds(210, 410, 57, 26);

        dot.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        dot.setText(".");
        dot.setFocusable(false);
        dot.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        dot.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        dot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dotActionPerformed(evt);
            }
        });
        frame.add(dot);
        dot.setBounds(70, 410, 57, 26);

        percent.setFont(new java.awt.Font("Algerian", 1, 20)); // NOI18N
        percent.setText("%");
        percent.setBorder(null);
        percent.setFocusable(false);
        percent.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        percent.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        percent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentActionPerformed(evt);
            }
        });
        frame.add(percent);
        percent.setBounds(130, 410, 57, 26);

        cos.setBackground(new java.awt.Color(0, 204, 255));
        cos.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        cos.setForeground(new java.awt.Color(255, 255, 255));
        cos.setText("cos");
        cos.setToolTipText("Enter a number first");
        cos.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cos.setFocusable(false);
        cos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cosActionPerformed(evt);
            }
        });
        frame.add(cos);
        cos.setBounds(70, 280, 57, 26);

        root.setBackground(new java.awt.Color(51, 204, 255));
        root.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        root.setForeground(new java.awt.Color(255, 255, 255));
        root.setText("√");
        root.setToolTipText("Enter a number first");
        root.setFocusable(false);
        root.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        root.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        root.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rootActionPerformed(evt);
            }
        });
        frame.add(root);
        root.setBounds(210, 280, 57, 26);

        tan.setBackground(new java.awt.Color(0, 204, 255));
        tan.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        tan.setForeground(new java.awt.Color(255, 255, 255));
        tan.setText("tan");
        tan.setToolTipText("Enter a number first");
        tan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tan.setFocusable(false);
        tan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tan.setMargin(new java.awt.Insets(2, 5, 2, 5));
        tan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanActionPerformed(evt);
            }
        });
        frame.add(tan);
        tan.setBounds(130, 280, 57, 26);

        two.setFont(new java.awt.Font("Algerian", 1, 20)); // NOI18N
        two.setText("2");
        two.setFocusable(false);
        two.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        two.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });
        frame.add(two);
        two.setBounds(70, 380, 57, 26);

        bin.setBackground(new java.awt.Color(0, 204, 255));
        bin.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        bin.setForeground(new java.awt.Color(255, 255, 255));
        bin.setText("bin");
        bin.setToolTipText("Enter a number first");
        bin.setBorder(null);
        bin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binActionPerformed(evt);
            }
        });
        frame.add(bin);
        bin.setBounds(10, 220, 57, 26);

        three.setFont(new java.awt.Font("Algerian", 1, 20)); // NOI18N
        three.setText("3");
        three.setFocusable(false);
        three.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        three.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });
        frame.add(three);
        three.setBounds(130, 380, 57, 26);

        tanh.setBackground(new java.awt.Color(0, 204, 255));
        tanh.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        tanh.setForeground(new java.awt.Color(255, 255, 255));
        tanh.setText("tanh");
        tanh.setToolTipText("Enter a number first");
        tanh.setBorder(null);
        tanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanhActionPerformed(evt);
            }
        });
        frame.add(tanh);
        tanh.setBounds(130, 250, 57, 26);

        reset.setBackground(new java.awt.Color(28, 79, 130));
        reset.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        reset.setForeground(new java.awt.Color(255, 255, 255));
        reset.setText("AC");
        reset.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        reset.setFocusable(false);
        reset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        reset.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        frame.add(reset);
        reset.setBounds(270, 320, 57, 26);

        devide.setBackground(new java.awt.Color(27, 77, 126));
        devide.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        devide.setForeground(new java.awt.Color(255, 255, 255));
        devide.setText("÷");
        devide.setBorder(null);
        devide.setFocusable(false);
        devide.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        devide.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        devide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                devideActionPerformed(evt);
            }
        });
        frame.add(devide);
        devide.setBounds(270, 350, 57, 26);

        squares.setBackground(new java.awt.Color(51, 204, 255));
        squares.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        squares.setForeground(new java.awt.Color(255, 255, 255));
        squares.setText("   x^☐  ");
        squares.setToolTipText("Enter a number first");
        squares.setBorder(null);
        squares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squaresActionPerformed(evt);
            }
        });
        frame.add(squares);
        squares.setBounds(270, 250, 57, 26);

        square.setBackground(new java.awt.Color(51, 204, 255));
        square.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        square.setForeground(new java.awt.Color(255, 255, 255));
        square.setText("x^2");
        square.setToolTipText("Enter a number first");
        square.setBorder(null);
        square.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareActionPerformed(evt);
            }
        });
        frame.add(square);
        square.setBounds(210, 250, 57, 26);

        clear.setBackground(new java.awt.Color(28, 79, 130));
        clear.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("C");
        clear.setFocusable(false);
        clear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clear.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        frame.add(clear);
        clear.setBounds(210, 320, 57, 26);

        plus.setBackground(new java.awt.Color(27, 77, 126));
        plus.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        plus.setForeground(new java.awt.Color(255, 255, 255));
        plus.setText("+");
        plus.setBorder(null);
        plus.setFocusable(false);
        plus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plus.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });
        frame.add(plus);
        plus.setBounds(210, 380, 57, 26);

        multiply.setBackground(new java.awt.Color(27, 77, 126));
        multiply.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        multiply.setForeground(new java.awt.Color(255, 255, 255));
        multiply.setText("x");
        multiply.setBorder(null);
        multiply.setFocusable(false);
        multiply.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        multiply.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyActionPerformed(evt);
            }
        });
        frame.add(multiply);
        multiply.setBounds(210, 350, 57, 26);

        pie.setBackground(new java.awt.Color(51, 204, 255));
        pie.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        pie.setForeground(new java.awt.Color(255, 255, 255));
        pie.setText("π");
        pie.setBorder(null);
        pie.setFocusable(false);
        pie.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pie.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        pie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pieActionPerformed(evt);
            }
        });
        frame.add(pie);
        pie.setBounds(270, 280, 57, 26);

        sinh.setBackground(new java.awt.Color(0, 204, 255));
        sinh.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        sinh.setForeground(new java.awt.Color(255, 255, 255));
        sinh.setText("sinh");
        sinh.setToolTipText("Enter a number first");
        sinh.setBorder(null);
        sinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinhActionPerformed(evt);
            }
        });
        frame.add(sinh);
        sinh.setBounds(10, 250, 57, 26);

        cosh.setBackground(new java.awt.Color(0, 204, 255));
        cosh.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        cosh.setForeground(new java.awt.Color(255, 255, 255));
        cosh.setText("cosh");
        cosh.setToolTipText("Enter a number first");
        cosh.setBorder(null);
        cosh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coshActionPerformed(evt);
            }
        });
        frame.add(cosh);
        cosh.setBounds(70, 250, 57, 26);

        minus.setBackground(new java.awt.Color(27, 77, 126));
        minus.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        minus.setForeground(new java.awt.Color(255, 255, 255));
        minus.setText("-");
        minus.setBorder(null);
        minus.setFocusable(false);
        minus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        minus.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });
        frame.add(minus);
        minus.setBounds(270, 380, 57, 26);

        jButton13.setBackground(new java.awt.Color(51, 204, 255));
        jButton13.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        jButton13.setForeground(new java.awt.Color(255, 255, 255));
        jButton13.setText("log");
        jButton13.setToolTipText("EEnter a number first");
        jButton13.setBorder(null);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        frame.add(jButton13);
        jButton13.setBounds(210, 220, 57, 26);

        equal.setBackground(new java.awt.Color(28, 77, 125));
        equal.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        equal.setForeground(new java.awt.Color(255, 255, 255));
        equal.setText("=");
        equal.setBorder(null);
        equal.setFocusable(false);
        equal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        equal.setMargin(new java.awt.Insets(2, 2, 2, 2));
        equal.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalActionPerformed(evt);
            }
        });
        frame.add(equal);
        equal.setBounds(270, 410, 57, 26);

        dec.setBackground(new java.awt.Color(51, 204, 255));
        dec.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        dec.setForeground(new java.awt.Color(255, 255, 255));
        dec.setText("e");
        dec.setBorder(null);
        dec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decActionPerformed(evt);
            }
        });
        frame.add(dec);
        dec.setBounds(130, 190, 57, 26);

        buttonGroup2.add(binary);
        binary.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        binary.setText("bin");
        binary.setToolTipText("select number base");
        binary.setBorder(null);
        binary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binaryActionPerformed(evt);
            }
        });
        frame.add(binary);
        binary.setBounds(150, 100, 40, 17);

        buttonGroup2.add(octal);
        octal.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        octal.setText("oct");
        octal.setToolTipText("select number base");
        octal.setBorder(null);
        octal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                octalActionPerformed(evt);
            }
        });
        frame.add(octal);
        octal.setBounds(290, 100, 40, 17);

        buttonGroup2.add(decimal);
        decimal.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        decimal.setSelected(true);
        decimal.setText("dec");
        decimal.setToolTipText("select number base");
        decimal.setBorder(null);
        decimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalActionPerformed(evt);
            }
        });
        frame.add(decimal);
        decimal.setBounds(190, 100, 50, 17);

        buttonGroup2.add(hexadicamal);
        hexadicamal.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        hexadicamal.setText("hex");
        hexadicamal.setToolTipText("select number base");
        hexadicamal.setBorder(null);
        hexadicamal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexadicamalActionPerformed(evt);
            }
        });
        frame.add(hexadicamal);
        hexadicamal.setBounds(240, 100, 50, 17);

        jButton2.setText("jButton2");
        frame.add(jButton2);
        jButton2.setBounds(440, 100, 73, 23);

        jButton3.setBackground(new java.awt.Color(0, 204, 255));
        jButton3.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("ln");
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        frame.add(jButton3);
        jButton3.setBounds(270, 220, 57, 26);

        factorial.setBackground(new java.awt.Color(0, 204, 255));
        factorial.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        factorial.setForeground(new java.awt.Color(255, 255, 255));
        factorial.setText("!");
        factorial.setBorder(null);
        factorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factorialActionPerformed(evt);
            }
        });
        frame.add(factorial);
        factorial.setBounds(10, 190, 57, 26);

        plusminus.setBackground(new java.awt.Color(0, 204, 255));
        plusminus.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        plusminus.setForeground(new java.awt.Color(255, 255, 255));
        plusminus.setText("±");
        plusminus.setBorder(null);
        plusminus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusminusActionPerformed(evt);
            }
        });
        frame.add(plusminus);
        plusminus.setBounds(70, 190, 57, 26);

        ncr.setBackground(new java.awt.Color(0, 204, 255));
        ncr.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        ncr.setForeground(new java.awt.Color(255, 255, 255));
        ncr.setText("nCr");
        ncr.setBorder(null);
        ncr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ncrActionPerformed(evt);
            }
        });
        frame.add(ncr);
        ncr.setBounds(270, 190, 57, 26);

        inverse.setBackground(new java.awt.Color(0, 204, 255));
        inverse.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        inverse.setForeground(new java.awt.Color(255, 255, 255));
        inverse.setText("1/x");
        inverse.setBorder(null);
        inverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inverseActionPerformed(evt);
            }
        });
        frame.add(inverse);
        inverse.setBounds(210, 190, 57, 26);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(frame, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(frame, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void degreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_degreeActionPerformed
        // TODO add your handling code here:
        degreemode= true;
        radianmode= false;
    }//GEN-LAST:event_degreeActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        
    }//GEN-LAST:event_formKeyPressed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
         display.setText("");
    }//GEN-LAST:event_resetActionPerformed

    private void devideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_devideActionPerformed
        // TODO add your handling code here:
        //To ensure expression is valid
        incomplete=true;
        containdot=false;
         if(incomplete && display.getText().equals(""))
        {
          JOptionPane.showMessageDialog(null,"Enter a valid number first / Enter a vaild expression");   
        }
        //To ensure multiple operation   
        String multicheck =display.getText();
        if(multicheck.indexOf('/')>1 || multicheck.indexOf('-')>0 || multicheck.indexOf('+')>0 ||multicheck.indexOf('*')>0||multicheck.indexOf('^')>0||multicheck.indexOf('C')>0||negative)
        multiop=true;
         //To perform multiple operation: 
        if(reseter!=1)
        {
         if(!multiop||special) 
        {   
        display.setText(display.getText()+" / ");
        special=false;
        }
        else
        {    
           answer();
           display.setText(display.getText()+" / ");
           multiop=false;
        }
        }
        else
        {
            display.setText("");
            reseter=1;
        }
      
    }//GEN-LAST:event_devideActionPerformed

    private void equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalActionPerformed
       
      
       boolean emptyexpression;
        String multicheck =display.getText();
        if(multicheck.indexOf('/')<0 && multicheck.indexOf('-')<0 && multicheck.indexOf('+')<0 && multicheck.indexOf('*')<0 && multicheck.indexOf('^')<0 && multicheck.indexOf('C')<0 )
            emptyexpression=true;
        else
            emptyexpression=false;
        if(display.getText().equals("") || incomplete || emptyexpression){
            JOptionPane.showMessageDialog(null,"Enter a valid number first / Enter a vaild expression");
        }
        else{
       answer();
       reseter=1;
        }
    }//GEN-LAST:event_equalActionPerformed

    public void answer()
    {
        int x=display.getText().length(); 
        fnum= Double.parseDouble(value.substring(0, value.indexOf(" ")));
        snum= Double.parseDouble(value.substring(value.indexOf(" ")+2, x));
     
        operator= value.substring(value.indexOf(" ")+1,value.indexOf(" ")+2);
       
        if(operator.equals("+"))
        {
            ans = fnum+snum;
        }
        else if(operator.equals("-"))
        {
            ans = fnum-snum;
            if(ans<0)
                negative=true;
            else
                negative=false;
        }
         else if(operator.equals("*"))
        {
            ans = fnum*snum;
        }
         else if(operator.equals("/"))
        {
            ans = fnum/snum;
        }
         else if(operator.equals("%"))
        {
            ans = fnum%snum;
        }
         else if(operator.equals("^"))
         {
              
             ans=Math.pow(fnum, snum);
           
         }
         else if(operator.equals("C"))
         {
             ans=nCr(fnum,snum);
         }
         else
        {
            display.setText("");
        }
        
        
        stored = String.valueOf(ans);
        
        display.setText(String.valueOf(ans));
     
    
    }
    
    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        
        int length =display.getText().length();
        int number =display.getText().length()-1;
        String store;
        
        if(length>0)
        {
         StringBuilder back = new StringBuilder(display.getText());
         back.deleteCharAt(number);
         store=back.toString();
         display.setText(store);
        }
    }//GEN-LAST:event_clearActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
      
        //To ensure expression is valid
       
        incomplete=true;
        containdot=false;
        if(incomplete && display.getText().equals(""))
        {
          JOptionPane.showMessageDialog(null,"Enter a valid number first / Enter a vaild expression");   
        }

        //To ensure multiple operation 
        String multicheck =display.getText();
        if(multicheck.indexOf('+')>1 || multicheck.indexOf('-')>0 || multicheck.indexOf('*')>0 ||multicheck.indexOf('/')>0||multicheck.indexOf('^')>0||multicheck.indexOf('C')>0||negative)
        multiop=true;
        
        
         //To ensure Perform operation
        if(special)
            reseter=0;
        if(reseter!=1)
        {
        if(!multiop||special) 
        {   
        display.setText(display.getText()+" + ");
        special=false;
        }
        else
        {    
           answer();
           display.setText(display.getText()+" + ");
           multiop=false;
        }
        }
        else
        {
            display.setText("");
            reseter=1;
        }
       
    }//GEN-LAST:event_plusActionPerformed

    private void sinFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sinFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_sinFocusGained

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
      
      if(incomplete)
        incomplete=false;
        
      if(reseter!=1) 
      {
          value=display.getText() + "1";
          display.setText(value);
      }
      else
      {
      display.setText("");
      value=display.getText() + "1";
      display.setText(value);
      reseter=0;
      }
       
    }//GEN-LAST:event_oneActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
       if(incomplete)
           incomplete=false;
        
      if(reseter!=1 ) 
      {
          value=display.getText() + "2";
          display.setText(value);
      }
      else
      {
      display.setText("");
      value=display.getText() + "2";
      display.setText(value);
      reseter=0;
      } 
    }//GEN-LAST:event_twoActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
      
      if(incomplete)
        incomplete=false;
      
      if(reseter!=1) 
      {
          value=display.getText() + "3";
          display.setText(value);
      }
      else
      {
      display.setText("");
      value=display.getText() + "3";
      display.setText(value);
      reseter=0;
      }
       
    }//GEN-LAST:event_threeActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
       
      if(incomplete)
         incomplete=false;
        
      if(reseter!=1) 
      {
          value=display.getText() + "4";
          display.setText(value);
      }
      else
      {
      display.setText("");
      value=display.getText() + "4";
      display.setText(value);
      reseter=0;
      }
       
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
      if(incomplete)
         incomplete=false;
        
      if(reseter!=1) 
      {
          value=display.getText() + "5";
          display.setText(value);
      }
      else
      {
      display.setText("");
      value=display.getText() + "5";
      display.setText(value);
      reseter=0;
      }
       
    }//GEN-LAST:event_fiveActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
      if(incomplete)
           incomplete=false;
      if(reseter!=1) 
      {
          value=display.getText() + "6";
          display.setText(value);
      }
      else
      {
      display.setText("");
      value=display.getText() + "6";
      display.setText(value);
      reseter=0;
      }
       
    }//GEN-LAST:event_sixActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
      if(incomplete)
           incomplete=false;
        
      if(reseter!=1) 
      {
          value=display.getText() + "7";
          display.setText(value);
      }
      else
      {
      display.setText("");
      value=display.getText() + "7";
      display.setText(value);
      reseter=0;
      }
    }//GEN-LAST:event_sevenActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
      if(incomplete)
           incomplete=false;
      if(reseter!=1) 
      {
          value=display.getText() + "8";
          display.setText(value);
      }
      else
      {
      display.setText("");
      value=display.getText() + "8";
      display.setText(value);
      reseter=0;
      }
    }//GEN-LAST:event_eightActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
      if(incomplete)
        incomplete=false;
      if(reseter!=1) 
      {
          value=display.getText() + "9";
          display.setText(value);
      }
      else
      {
      display.setText("");
      value=display.getText() + "9";
      display.setText(value);
      reseter=0;
      }
       
    }//GEN-LAST:event_nineActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
        incomplete=true;
        containdot=false;
         if(incomplete && display.getText().equals(""))
        {
          JOptionPane.showMessageDialog(null,"Enter a valid number first / Enter a vaild expression");   
        }
         
        String multicheck =display.getText();
        if(multicheck.indexOf('-')>1 || multicheck.indexOf('+')>0 || multicheck.indexOf('*')>0 ||multicheck.indexOf('/')>0||multicheck.indexOf('^')>0 ||multicheck.indexOf('C')>0||negative)
        multiop=true;
        
        if(special)
            reseter=0;
        
        if(reseter!=1)
        {
         if(!multiop||special) 
        {   
        display.setText(display.getText()+" - ");
        special=false;
        }
        else
        {    
           answer();
           display.setText(display.getText()+" - ");
           multiop=false;
        }
        }
        else
        {
            display.setText("");
            reseter=1;
        }
        
    }//GEN-LAST:event_minusActionPerformed

    private void multiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyActionPerformed
        // TODO add your handling code here:
        //To ensure expression is valid
        incomplete=true;
        containdot=false;
         if(incomplete && display.getText().equals(""))
        {
          JOptionPane.showMessageDialog(null,"Enter a valid number first / Enter a vaild expression");   
        }
        //To ensure multiple operation
        String multicheck =display.getText();
        if(multicheck.indexOf('*')>1 || multicheck.indexOf('-')>0 || multicheck.indexOf('+')>0 ||multicheck.indexOf('/')>0||multicheck.indexOf('^')>0||multicheck.indexOf('C')>0||negative)
        multiop=true;
        //To Perform multiple operation
        if(special)
            reseter=0;
        
        if(reseter!=1)
        {
        if(!multiop||special) 
        {   
        display.setText(display.getText()+" * ");
        special=false;
        }
        else
        {    
           answer();
           display.setText(display.getText()+" * ");
           multiop=false;
        }
        }
        else
        {
            display.setText("");
            reseter=1;
        }
        
    }//GEN-LAST:event_multiplyActionPerformed

    private void pieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pieActionPerformed
        // TODO add your handling code here:  
        
       boolean emptyexpression;
        String multicheck =display.getText();
        if(multicheck.indexOf('/')<0 && multicheck.indexOf('-')<0 && multicheck.indexOf('+')<0 && multicheck.indexOf('*')<0 && (!(multicheck.contains(""))) )
            emptyexpression=true;
        else
            emptyexpression=false;
        if( emptyexpression){
            JOptionPane.showMessageDialog(null,"Enter a valid number first / Enter a vaild expression");
        }
       else
        {     
      if(incomplete)
        incomplete=false;
      
      if(reseter!=1) 
      {
          value=display.getText() + "3.14159";
          display.setText(value);
      }
      else
      {
      display.setText("");
      value=display.getText() + "3.14159";
      display.setText(value);
      reseter=0;
      }
        }
    }//GEN-LAST:event_pieActionPerformed

    private void displayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayActionPerformed

    private void rootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rootActionPerformed
        // TODO add your handling code here:
        if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        { 
        special=true;    
        ans =Double.parseDouble(String.valueOf(display.getText()));
        ans= Math.sqrt(ans);
        display.setText(Double.toString(ans));
        reseter=1;
        }
    }//GEN-LAST:event_rootActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
      if(incomplete)
        incomplete=false;
        
      if(reseter!=1) 
      {
          value=display.getText() + "0";
          display.setText(value);
      }
      else
      {
      display.setText("");
      value=display.getText() + "0";
      display.setText(value);
      reseter=0;
      }
    }//GEN-LAST:event_zeroActionPerformed

    private void dotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dotActionPerformed
        // TODO add your handling code here:
      
      
         if(!(display.getText().contains(".")) || !containdot)
         {
             display.setText(display.getText() + ".");
             containdot=true;
         }
        
    }//GEN-LAST:event_dotActionPerformed

    private void sinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinActionPerformed
        
         if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        {
        double ans;
        if(degreemode)
        {    
          ans = Math.sin(Math.toRadians(Double.parseDouble(String.valueOf(display.getText()))));
          display.setText("sin("+display.getText()+") = "+String.valueOf(ans));  
          stored=String.valueOf(ans);
        }
        else if(radianmode)
        {
          ans = Math.sin(Double.parseDouble(String.valueOf(display.getText())));
          display.setText("sin("+display.getText()+") = "+String.valueOf(ans)); 
          stored=String.valueOf(ans);
        }
        reseter=1;
        }
    }//GEN-LAST:event_sinActionPerformed

    private void cosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cosActionPerformed
        
         if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        {
        double ans;
        if(degreemode)
        {    
          ans = Math.cos(Math.toRadians(Double.parseDouble(String.valueOf(display.getText()))));
          display.setText("cos("+display.getText()+") = "+String.valueOf(ans)); 
          stored=String.valueOf(ans);
        }
        else if(radianmode)
        {
          ans = Math.cos(Double.parseDouble(String.valueOf(display.getText())));
          display.setText("cos("+display.getText()+") = "+String.valueOf(ans)); 
          stored=String.valueOf(ans);
        }
        reseter=1;
        }
    }//GEN-LAST:event_cosActionPerformed

    private void tanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanActionPerformed
        if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        {
        double ans;
        if(degreemode)
        {    
          ans = Math.tan(Math.toRadians(Double.parseDouble(String.valueOf(display.getText()))));
          display.setText("tan("+display.getText()+") = "+String.valueOf(ans));  
          stored=String.valueOf(ans);
        }
        else if(radianmode)
        {
          ans = Math.tan(Double.parseDouble(String.valueOf(display.getText())));
          display.setText("tan("+display.getText()+") = "+String.valueOf(ans)); 
          stored=String.valueOf(ans);
        }
        reseter=1;
        }
    }//GEN-LAST:event_tanActionPerformed

    private void resultssActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultssActionPerformed
       
      if(incomplete)
           incomplete=false;
        
      if(reseter!=1 ) 
      {
           display.setText(stored);
      }
      else
      {
       display.setText("");
       display.setText(stored);
       reseter=0;
      }
       
    }//GEN-LAST:event_resultssActionPerformed

    private void tanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanhActionPerformed
        // TODO add your handling code here:
         if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        {
        if(radianmode)
        { 
        double tanans = Math.tanh(Double.parseDouble(String.valueOf(display.getText())));
        display.setText("tanh("+display.getText()+") = "+String.valueOf(tanans));
        stored=String.valueOf(tanans);
        }
        if(degreemode)
        {    
          ans = Math.tanh(Math.toRadians(Double.parseDouble(String.valueOf(display.getText()))));
          display.setText("tanh("+display.getText()+") = "+String.valueOf(ans));  
          stored=String.valueOf(ans);
        }
        reseter=1;
        }
    }//GEN-LAST:event_tanhActionPerformed

    private void coshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coshActionPerformed
        // TODO add your handling code here:
         if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        {
        if(radianmode)
        { 
          double cos_ans = Math.cosh(Double.parseDouble(String.valueOf(display.getText())));
         display.setText("cosh("+display.getText()+") = "+String.valueOf(cos_ans));
         stored=String.valueOf(cos_ans);
        }
        if(degreemode)
        {    
          ans = Math.cosh(Math.toRadians(Double.parseDouble(String.valueOf(display.getText()))));
          display.setText("cosh("+display.getText()+") = "+String.valueOf(ans));  
          stored=String.valueOf(ans);
        }
        reseter=1;
        }
    }//GEN-LAST:event_coshActionPerformed

    private void sinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinhActionPerformed
        // TODO add your handling code here:
        if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        {    
        if(radianmode)
        {    
        double sin_ans = Math.sinh(Double.parseDouble(String.valueOf(display.getText())));
        display.setText("sinh("+display.getText()+") = "+String.valueOf(sin_ans));
        stored=String.valueOf(sin_ans);
        }
        if(degreemode)
        {    
          ans = Math.sinh(Math.toRadians(Double.parseDouble(String.valueOf(display.getText()))));
          display.setText("sinh("+display.getText()+") = "+String.valueOf(ans));  
          stored=String.valueOf(ans);
        }
        reseter=1;
        }
    }//GEN-LAST:event_sinhActionPerformed

    private void squareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareActionPerformed
        // TODO add your handling code here:
        if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        {    
        special=true;
        double square =Double.parseDouble(String.valueOf(display.getText()));
        square=Math.pow(square, 2);
        display.setText(String.valueOf(square));
        }
    }//GEN-LAST:event_squareActionPerformed

    private void squaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squaresActionPerformed
        // TODO add your handling code here:
           
        incomplete=true;
        if(incomplete && display.getText().equals(""))
        {
          JOptionPane.showMessageDialog(null,"Enter a valid number first / Enter a vaild expression");   
        }

        //To ensure multiple operation 
        String multicheck =display.getText();
        if(multicheck.indexOf('^')>1 || multicheck.indexOf('-')>0 || multicheck.indexOf('*')>0 ||multicheck.indexOf('/')>0 ||multicheck.indexOf('+')>0 ||negative)
        multiop=true;
        
        
         //To ensure Perform operation 
        if(reseter!=1)
        {
        if(!multiop||special) 
        {   
        display.setText(display.getText()+" ^ ");
        special=false;
        }
        else
        {    
           answer();
           display.setText(display.getText()+" ^ ");
           multiop=false;
        }
        }
        else
        {
            display.setText("");
            reseter=1;
        }
       
    }//GEN-LAST:event_squaresActionPerformed

    private void binActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binActionPerformed
        // TODO add your handling code here:
      
        
         if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        {
        if(reseter==0)
        {    
        if(decmode)
        {
            int bin =Integer.parseInt(display.getText(),10);
            display.setText(Integer.toString(bin, 2));
          
        
        }
        else if(binmode)
        {
          int bin =Integer.parseInt(display.getText(),2);
          display.setText(Integer.toString(bin, 2)); 
          
        }
         else if(octmode)
        {
          int bin =Integer.parseInt(display.getText(),8);
          display.setText(Integer.toString(bin, 2));  
        }
         else if(hexmode)
        {
          int bin =Integer.parseInt(display.getText(),16);
          display.setText(Integer.toString(bin, 2));  
        }
        reseter=1;
        }
        else
        {
            display.setText("");
            JOptionPane.showMessageDialog(null,"Enter a valid number");
        }
        }
    }//GEN-LAST:event_binActionPerformed

    private void octActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_octActionPerformed
        // TODO add your handling code here:
      
        if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        {
           if(reseter==0)
          {    
          if(decmode)
          {    
               int oct =Integer.parseInt(display.getText(),10);
               display.setText(Integer.toString(oct, 8));
             
         }
         else if(binmode)
         {
             int oct =Integer.parseInt(display.getText(),2);
               display.setText(Integer.toString(oct, 8));  
         }
         else if(octmode)
        {
            int oct =Integer.parseInt(display.getText(),8);
          display.setText(Integer.toString(oct, 8));  
        }
         else if(hexmode)
        {
            int oct =Integer.parseInt(display.getText(),16);
          display.setText(Integer.toString(oct, 8));  
        }
         
         reseter=1;
          }
        else
        {
            display.setText("");
            JOptionPane.showMessageDialog(null,"Enter a valid number first ");
        }
        }        
    }//GEN-LAST:event_octActionPerformed

    private void hexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexActionPerformed
        // TODO add your handling code here:
         if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        {
              if(reseter==0)
          {  
          if(decmode)
        {  
             int hex =Integer.parseInt(display.getText(),10);
            display.setText(Integer.toString(hex, 16));
            
        }
            
          if(binmode)
        {    
            int hex =Integer.parseInt(display.getText(),2);
            display.setText(Integer.toString(hex, 16));
        }
            
          if(octmode)
        {    
            int hex =Integer.parseInt(display.getText(),8);
            display.setText(Integer.toString(hex, 16));
        }
            
          if(hexmode)
        {    
            int hex =Integer.parseInt(display.getText(),16);
            display.setText(Integer.toString(hex, 16));
        }
          reseter=1;
          }
        else
        {
            display.setText("");
            JOptionPane.showMessageDialog(null,"Enter a valid number ");
        }
        }
    }//GEN-LAST:event_hexActionPerformed

    private void decActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decActionPerformed
        // TODO add your handling code here:
           boolean emptyexpression;
        String multicheck =display.getText();
        if(multicheck.indexOf('/')<0 && multicheck.indexOf('-')<0 && multicheck.indexOf('+')<0 && multicheck.indexOf('*')<0 && (!(multicheck.contains(""))) )
            emptyexpression=true;
        else
            emptyexpression=false;
        if( emptyexpression){
            JOptionPane.showMessageDialog(null,"Enter a valid number first / Enter a vaild expression");
        }
       else
        {     
      if(incomplete)
        incomplete=false;
      
      if(reseter!=1) 
      {
          value=display.getText() + "2.71828182846";
          display.setText(value);
      }
      else
      {
      display.setText("");
      value=display.getText() + "2.71828182846";
      display.setText(value);
      reseter=0;
      }
        }
    }//GEN-LAST:event_decActionPerformed

    private void displayKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_displayKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c)||(c == KeyEvent.VK_DELETE))){
            getToolkit().beep();
            evt.consume();
          }
    }//GEN-LAST:event_displayKeyTyped

    private void percentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentActionPerformed
      display.setText(display.getText() + " % ");
    }//GEN-LAST:event_percentActionPerformed

    private void radianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radianActionPerformed
        // TODO add your handling code here:
        radianmode= true;
        degreemode= false;
        
    }//GEN-LAST:event_radianActionPerformed

    private void octalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_octalActionPerformed
        // TODO add your handling code here:
     decmode=false;
     binmode=false;
     hexmode=false;
     octmode=true;
    }//GEN-LAST:event_octalActionPerformed

    private void decimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalActionPerformed
        // TODO add your handling code here:
     decmode=true;
     binmode=false;
     hexmode=false;
     octmode=false;
    }//GEN-LAST:event_decimalActionPerformed

    private void hexadicamalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexadicamalActionPerformed
        // TODO add your handling code here:
     decmode=false;
     binmode=false;
     hexmode=true;
     octmode=false;
    }//GEN-LAST:event_hexadicamalActionPerformed

    private void binaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binaryActionPerformed
        // TODO add your handling code here:
     decmode=false;
     binmode=true;
     hexmode=false;
     octmode=false;
    }//GEN-LAST:event_binaryActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
          if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        { 
        special=true;    
        ans =Double.parseDouble(String.valueOf(display.getText()));
        ans= Math.log10(ans);
        display.setText(Double.toString(ans));
        }
       
        
    }//GEN-LAST:event_jButton13ActionPerformed

    private void plusminusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusminusActionPerformed
        // TODO add your handling code here:
          if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        { 
        special=true;    
        ans =Double.parseDouble(String.valueOf(display.getText()));
        ans= ans* (-1);
        display.setText(Double.toString(ans));
        reseter=1;
        }
    }//GEN-LAST:event_plusminusActionPerformed

    private void inverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inverseActionPerformed
        // TODO add your handling code here:
          if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        { 
        special=true;    
        ans =Double.parseDouble(String.valueOf(display.getText()));
        ans= 1/ans;
        display.setText(Double.toString(ans));
        reseter=1;
        }
    }//GEN-LAST:event_inverseActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
               if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        { 
        special=true;    
        ans =Double.parseDouble(String.valueOf(display.getText()));
        ans= Math.log(ans);
        display.setText(Double.toString(ans));
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void factorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_factorialActionPerformed
        // TODO add your handling code here:
        if(display.getText().equals("")||incomplete){
            JOptionPane.showMessageDialog(null,"Enter a number first");
        }
        else
        { 
        special=true;    
        ans =Double.parseDouble(String.valueOf(display.getText()));
       
        BigInteger k = BigDecimal.valueOf(ans).toBigInteger();
        BigInteger  f = factorial(k);
        ans= f.doubleValue();
        display.setText(Double.toString(ans));
        reseter=1;
        }
        
    }//GEN-LAST:event_factorialActionPerformed

    private void ncrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ncrActionPerformed
        // TODO add your handling code here:
        incomplete=true;
        containdot=false;
        if(incomplete && display.getText().equals(""))
        {
          JOptionPane.showMessageDialog(null,"Enter a valid number first / Enter a vaild expression");   
        }

        //To ensure multiple operation 
        String multicheck =display.getText();
        if(multicheck.indexOf('C')>1|| multicheck.indexOf('+')>0 || multicheck.indexOf('-')>0 || multicheck.indexOf('*')>0 ||multicheck.indexOf('/')>0||multicheck.indexOf('^')>0||negative)
        multiop=true;
        
        
         //To ensure Perform operation
        if(special)
            reseter=0;
        if(reseter!=1)
        {
        if(!multiop||special) 
        {   
        display.setText(display.getText()+" C ");
        special=false;
        }
        else
        {    
           answer();
           display.setText(display.getText()+" C ");
           multiop=false;
        }
        }
        else
        {
            display.setText("");
            reseter=1;
        }
        
    }//GEN-LAST:event_ncrActionPerformed
    public static double nCr(double n, double r){
		double rfact=1, nfact=1, nrfact=1,temp1 = n-r ,temp2 = r;
		if(r>n-r)
		{
			temp1 =r;
			temp2 =n-r;
		}
		for(int i=1;i<=n;i++)
		{
			if(i<=temp2)
			{
				rfact *= i;
				nrfact *= i;
			}
			else if(i<=temp1)
			{
				nrfact *= i;
			}
			nfact *= i;
		}
		return nfact/(double)(rfact*nrfact);
	     }
    public static BigInteger factorial(BigInteger number) {
    BigInteger result = BigInteger.valueOf(1);

    for (long factor = 2; factor <= number.longValue(); factor++) {
        result = result.multiply(BigInteger.valueOf(factor));
    }

    return result;
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bin;
    private javax.swing.JRadioButton binary;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton clear;
    private javax.swing.JButton cos;
    private javax.swing.JButton cosh;
    private javax.swing.JButton dec;
    private javax.swing.JRadioButton decimal;
    private javax.swing.JRadioButton degree;
    private javax.swing.JButton devide;
    private javax.swing.JTextField display;
    private javax.swing.JButton dot;
    private javax.swing.JButton eight;
    private javax.swing.JButton equal;
    private javax.swing.JButton factorial;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JDesktopPane frame;
    private javax.swing.JButton hex;
    private javax.swing.JRadioButton hexadicamal;
    private javax.swing.JButton inverse;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton minus;
    private javax.swing.JButton multiply;
    private javax.swing.JButton ncr;
    private javax.swing.JButton nine;
    private javax.swing.JButton oct;
    private javax.swing.JRadioButton octal;
    private javax.swing.JButton one;
    private javax.swing.JButton percent;
    private javax.swing.JButton pie;
    private javax.swing.JButton plus;
    private javax.swing.JButton plusminus;
    private javax.swing.JRadioButton radian;
    private javax.swing.JButton reset;
    private javax.swing.JButton resultss;
    private javax.swing.JButton root;
    private javax.swing.JButton seven;
    private javax.swing.JButton sin;
    private javax.swing.JButton sinh;
    private javax.swing.JButton six;
    private javax.swing.JButton square;
    private javax.swing.JButton squares;
    private javax.swing.JButton tan;
    private javax.swing.JButton tanh;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
